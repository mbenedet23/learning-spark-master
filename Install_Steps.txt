-- Create the databases required for the Cloudera Manager in MySQL

create database scm DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci;
grant all on scm.* TO 'scm'@'%' IDENTIFIED BY 'scm_ClouderaEDL_6';


create database amon DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci;
grant all on amon.* TO 'amon'@'%' IDENTIFIED BY 'amon_ClouderaEDL_6';

create database rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
grant all on rman.* TO 'rman'@'%' IDENTIFIED BY 'rman_ClouderaEDL_6';

create database nav DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci;
grant all on nav.* TO 'nav'@'%' IDENTIFIED BY 'nav_ClouderaEDL_6';

create database metastore DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci;
grant all on metastore.* TO 'hive'@'%' IDENTIFIED BY 'metastore_ClouderaEDL_6';

create database sentry DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci;
grant all on sentry.* TO 'sentry'@'%' IDENTIFIED BY 'sentry_ClouderaEDL_6';

create database navms DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci;
grant all on navms.* TO 'navms'@'%' IDENTIFIED BY 'navms_ClouderaEDL_6';

create database hue DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci;
grant all on hue.* to 'hue'@'%' identified by 'hue_ClouderaEDL_6';

create database oozie DEFAULT CHARACTER SET utf8  DEFAULT COLLATE utf8_general_ci;
grant all on oozie.* to 'oozie'@'%' identified by 'oozie_ClouderaEDL_6';


-- Run the script to create the tables required for CM
-- This command needs to be run from the Cloudera Manager Server
-- we need to install the MySQL JDBC driver on the CM server node. Use the below commands to install on the CM server node. 

wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz
tar zxvf mysql-connector-java-5.1.46.tar.gz
mkdir -p /usr/share/java/
cd mysql-connector-java-5.1.46
cp mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar
chmod 755 -R /usr/share/java
-- Copy the /etc/cloudera-scm-server/db.properties from the DEV server and change the connection options to the mysql server. 
EXAMPLE:

#-> cat /etc/cloudera-scm-server/db.properties
# Auto-generated by scm_prepare_database.sh on Mon Apr 29 23:15:09 EDT 2019
#
# For information describing how to configure the Cloudera Manager Server
# to connect to databases, see the "Cloudera Manager Installation Guide."
#
com.cloudera.cmf.db.type=mysql
com.cloudera.cmf.db.host=ITSUSRALSP08777.jnj.com   <----------- change this hostname to the Mysql hostname
com.cloudera.cmf.db.name=scm
com.cloudera.cmf.db.user=scm
com.cloudera.cmf.db.setupType=EXTERNAL
com.cloudera.cmf.db.password=scm_ClouderaEDL_6
[root@ITSUSRALSP08774:/usr/share]#


-----------------------------------
-- Now run the below command on the Cloudera manager server to create the tables in the scm database. this script will run
-- from cloudera scm server and connect to the mysql server using the db.properties

/opt/cloudera/cm/schema/scm_prepare_database.sh -h ITSUSRALSP08777.jnj.com  mysql scm scm scm_ClouderaEDL_6

--Make sure all the Cloudera manager agent config.ini files are pointing to the right cloudera manager server
-- verify whether the certificates mentioned in the config.ini file for cloudera mangaer agent is right


-------------------------------------------
-- April 30

-- upgrade Java to 181 (jdk-8u181-linux-x64.tar.gz)
-- download Java from # https://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html or copy from dev node
-- Run the below commands
cp /home/asingh57/jdk-8u181-linux-x64.tar.gz /usr/java/
cd /usr/java/
tar -xvf jdk-8u181-linux-x64.tar.gz
chmod -R 775 /apps/java
chmod -R 775 /usr/java/jdk1.8.0_181
ln -s /apps/java/jdk1.8.0_181/ /usr/java/latest
ln -s /apps/java/jdk1.8.0_181/ /usr/java/default
alternatives --install /usr/bin/java java /usr/java/jdk1.8.0_181/bin/java 2
update-alternatives --config java 
-- select the number that shows "/usr/java/jdk1.8.0_181/bin/java". It would be mostly 2.

-- permanantly add JAVA_HOME
-- add the below lines to "/etc/profile" at the end of the file1
export JAVA_HOME="/usr/java/latest"
export PATH=$JAVA_HOME/bin:$PATH

-- save and exit vi
-- run the below commands to make it active. 
source /etc/profile
--command  "echo $JAVA_HOME" should show "/usr/java/latest"

-- Install JCE or copy from other servers

-- download, unzip and upload the US_export_policy.jar files to all the servers from https://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html
cp /home/asingh57/US_export_policy.jar /apps/java/jdk1.8.0_181/jre/lib/security/US_export_policy.jar
cp /home/asingh57/local_policy.jar /apps/java/jdk1.8.0_181/jre/lib/security/local_policy.jar
chmod 775 /apps/java/jdk1.8.0_181/jre/lib/security/US_export_policy.jar
chmod 775 /apps/java/jdk1.8.0_181/jre/lib/security/local_policy.jar

-------------------------------------
-- Restart the Cloudera Manager
http://<cm-servername>:7810
-- Not Turn on the SSL 
-- CM -> "Administartion" -> Settings -> search "ssl"
-- 1. Cloudera Manager TLS/SSL Server JKS Keystore File Location =>  "/opt/cloudera/security/jks/server.keystore"
-- 2. Cloudera Manager TLS/SSL Server JKS Keystore File Password => "Cloudea@6"
-- 3. Cloudera Manager TLS/SSL Client Trust Store File => "/opt/cloudera/security/jks/truststore.jks"
-- 4. Cloudera Manager TLS/SSL Client Trust Store Password => "changeit"
-- 5. Check "Use TLS Encryption for Admin Console"

-- Execute below command 
chmod 755 -R /opt/cloudera/security
-- Restart the Cloudera Manager
https://<cm-servername>:7813

-- At this point of time you should see all the hosts hearbeating to the Cloudera manager. If not make sure all are heart beating before you move ahead. 
-- Now, go to CM, select cluster -> add cluster -> name it "JnJ_RND_DEVCluster" and click next. 

--- it will show up the page where it asks for SSH/password. you should see a tab with name "unmanaged hosts" -> go to this tab and select all servers -> click next. 
-- Now it will ask for which parcels to install.



trustore.jks copy from other servers and put in all nodes

copy server.keystore as hdfs.keystore and httpfs.keystore and put all nodes.




------------------------------------------



cd /opt/cloudera/security/x509
cp server.key impala.key
chown impala:impala impala.key
chmod a+r impala.key
cp server.pem impala.cert
chown impala:impala impala.cert
chmod a+r impala.*


rm impalacombined.cert
cat server.pem ../CAcerts/combinedtrust.pem server.key > impalacombined.cert
chown impala:impala impalacombined.cert
chmod a+r impalacombined.cert 



----------------


cp server.pem hueserver.cert
chown hue:hue hueserver.cert
chmod a+r hueserver.cert

---------------------


cp server.key hueserver.key
chown hue:hue hueserver.key
chmod a+r hueserver.key